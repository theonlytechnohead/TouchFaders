<Window x:Name="configWindow" x:Class="TouchFaders.ConfigWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TouchFaders"
        mc:Ignorable="d"
        Title="Configuration" Height="400" Width="500" WindowStartupLocation="CenterOwner" MinWidth="500" MinHeight="400">
    <Window.Resources>
        <ResourceDictionary>
            <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
            <Style x:Key="GroupBoxSquareStyle" TargetType="{x:Type GroupBox}">
                <Setter Property="BorderBrush" Value="#ABADB3"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GroupBox}">
                            <Grid SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="6"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="6"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="6"/>
                                </Grid.RowDefinitions>
                                <Border BorderBrush="Transparent" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="4" Grid.Column="0" CornerRadius="4" Grid.Row="1" Grid.RowSpan="3"/>
                                <Border BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="4" Grid.Row="1" Grid.RowSpan="3">
                                    <Border.OpacityMask>
                                        <MultiBinding ConverterParameter="7" Converter="{StaticResource BorderGapMaskConverter}">
                                            <Binding ElementName="Header" Path="ActualWidth"/>
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}"/>
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}"/>
                                        </MultiBinding>
                                    </Border.OpacityMask>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                                        <Border BorderBrush="White" BorderThickness="{TemplateBinding BorderThickness}"/>
                                    </Border>
                                </Border>
                                <Border x:Name="Header" Grid.Column="1" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2">
                                    <ContentPresenter ContentSource="Header" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                                <ContentPresenter Grid.ColumnSpan="2" Grid.Column="1" Margin="{TemplateBinding Padding}" Grid.Row="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="OptionMarkFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="14,0,0,0" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>
            <SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
            <SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
            <SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
            <SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
            <SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
            <SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
            <SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
            <SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
            <SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
            <ControlTemplate x:Key="RadioButtonThemable" TargetType="{x:Type RadioButton}">
                <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Background="White">
                        <Grid x:Name="markGrid" Margin="2">
                            <Ellipse x:Name="optionMark" Fill="{StaticResource RadioButton.Static.Glyph}" MinWidth="6" MinHeight="6" Opacity="0"/>
                        </Grid>
                    </Border>
                    <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="HasContent" Value="true">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                        <Setter Property="Padding" Value="4,-1,0,0"/>
                    </Trigger>
                    <Trigger Property="IsMouseOver" Value="true">
                        <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
                        <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
                        <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
                        <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
                        <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
                    </Trigger>
                    <Trigger Property="IsPressed" Value="true">
                        <Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
                        <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
                        <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="true">
                        <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="{x:Null}">
                        <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>



        </ResourceDictionary>
    </Window.Resources>
    <Grid x:Name="configGrid" SizeChanged="configGrid_SizeChanged">
        <Grid.LayoutTransform>
            <ScaleTransform x:Name="ApplicationScaleTransform"
                        CenterX="0"
                        CenterY="0"
                        ScaleX="{Binding ScaleValue, ElementName=configWindow}"
                        ScaleY="{Binding ScaleValue, ElementName=configWindow}" />
        </Grid.LayoutTransform>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Label Content="Close the window to apply changes" HorizontalAlignment="Center" VerticalAlignment="Top" Foreground="#7F000000" Padding="0,2,0,0"/>
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <GroupBox Header="Console series" Style="{DynamicResource GroupBoxSquareStyle}" Margin="5,0,5,0">
                    <Grid Margin="5,0,5,0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.Resources>
                            <local:ComparisonConverter x:Key="ComparisonConverter"/>
                        </Grid.Resources>
                        <RadioButton Template="{DynamicResource RadioButtonThemable}" x:Name="qlSeries" Content="QL series" Grid.Row="1" IsChecked="{Binding ElementName=configWindow, Path=mixerType, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static local:Mixer+Type.QL}}" GroupName="consoleSeries" VerticalAlignment="Center"/>
                        <RadioButton Template="{DynamicResource RadioButtonThemable}" x:Name="clSeries" Content="CL series" Grid.Row="2" IsChecked="{Binding ElementName=configWindow, Path=mixerType, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static local:Mixer+Type.CL}}" GroupName="consoleSeries" VerticalAlignment="Center"/>
                    </Grid>
                </GroupBox>
                <GroupBox Header="Console type" Style="{DynamicResource GroupBoxSquareStyle}" Margin="5,0,5,0" Grid.Column="1">
                    <Grid Margin="5,0,5,0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.Resources>
                            <local:ComparisonConverter x:Key="ComparisonConverter"/>
                        </Grid.Resources>
                        <RadioButton Template="{DynamicResource RadioButtonThemable}" x:Name="smallModel" Content="1" HorizontalAlignment="Left" VerticalAlignment="Center" IsChecked="{Binding ElementName=configWindow, Path=mixerModel, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static local:Mixer+Model._1}}" GroupName="consoleType"/>
                        <RadioButton Template="{DynamicResource RadioButtonThemable}" x:Name="mediumModel" Content="3" HorizontalAlignment="Left" VerticalAlignment="Center" IsChecked="{Binding ElementName=configWindow, Path=mixerModel, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static local:Mixer+Model._3}}" Grid.Row="1" GroupName="consoleType"/>
                        <RadioButton Template="{DynamicResource RadioButtonThemable}" x:Name="largeModel" Content="5" HorizontalAlignment="Left" VerticalAlignment="Center" IsChecked="{Binding ElementName=configWindow, Path=mixerModel, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static local:Mixer+Model._5}}" Grid.Row="2" GroupName="consoleType"/>
                    </Grid>
                </GroupBox>
                <GroupBox Header="Connection method" Style="{DynamicResource GroupBoxSquareStyle}" Margin="5,0,5,0" Grid.Column="2">
                    <Grid Margin="5,0,5,0">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.Resources>
                            <local:ComparisonConverter x:Key="ComparisonConverter"/>
                        </Grid.Resources>
                        <RadioButton x:Name="rcpConnection" Template="{DynamicResource RadioButtonThemable}" Content="RCP" HorizontalAlignment="Left" VerticalAlignment="Center" IsChecked="{Binding ElementName=configWindow, Path=mixerConnection, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Static local:Mixer+Connection.RCP}}" Grid.Row="2" GroupName="connectionType"/>
                    </Grid>
                </GroupBox>
            </Grid>
            <GroupBox x:Name="deviceGroupBox" Header="Device" Margin="5, 0, 5, 0" Style="{DynamicResource GroupBoxSquareStyle}" Grid.Row="2">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.Resources>
                        <local:ComparisonConverter x:Key="ComparisonConverter"/>
                    </Grid.Resources>
                    <Slider x:Name="deviceIDSlider" VerticalAlignment="Center" Maximum="16" Minimum="1" SmallChange="1" Value="1" AutoToolTipPlacement="TopLeft" TickPlacement="BottomRight" IsSnapToTickEnabled="True" ValueChanged="deviceIDSlider_ValueChanged" Grid.Column="1"/>
                    <Label x:Name="deviceIDLabel" Content="ID:" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,5,0"/>
                </Grid>
            </GroupBox>
            <GroupBox x:Name="channelGroupBox" Header="Channels:" Grid.Row="3" Margin="5,0,5,5" Style="{DynamicResource GroupBoxSquareStyle}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>
                    <Slider x:Name="channelSlider" VerticalAlignment="Center" Maximum="64" Minimum="1" SmallChange="1" Value="32" AutoToolTipPlacement="TopLeft" TickPlacement="BottomRight" IsSnapToTickEnabled="True" ValueChanged="channelSlider_ValueChanged" Grid.Column="1"/>
                    <Button x:Name="editChannelsButton" Content="Edit channels" HorizontalAlignment="Center" VerticalAlignment="Center" Click="editChannelsButton_Click" Width="96"/>
                </Grid>
            </GroupBox>
            <GroupBox x:Name="mixGroupBox" Header="Mixes:" Grid.Row="4" Margin="5,0,5,5" Style="{DynamicResource GroupBoxSquareStyle}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Slider x:Name="mixSlider" VerticalAlignment="Center" Maximum="16" Minimum="1" SmallChange="1" Value="8" AutoToolTipPlacement="TopLeft" TickPlacement="BottomRight" IsSnapToTickEnabled="True" ValueChanged="mixSlider_ValueChanged" Grid.Column="1"/>
                    <Button x:Name="editMixesButton" Content="Edit mixes" HorizontalAlignment="Center" VerticalAlignment="Center" Width="96" Click="editMixesButton_Click"/>
                </Grid>
            </GroupBox>
        </Grid>

    </Grid>
</Window>
